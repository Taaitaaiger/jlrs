name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

  workflow_dispatch:

jobs:
  test-linux:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      matrix:
        rust: [stable, beta]
        allow-fail: [false]
        include:
          - rust: nightly
            allow-fail: true
    steps:
      - uses: actions/checkout@v3

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.8'

      - name: Setup Rust
        uses:  dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run tests
        run: |
          export JULIA_DIR="$(dirname $(dirname $(which julia)))"
          export LD_LIBRARY_PATH="${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}"
          cargo test --features full --verbose -- --test-threads=1

#  test-windows-gnu:
#    runs-on: windows-latest
#    continue-on-error: ${{ matrix.allow-fail }}
#    strategy:
#      matrix:
#        rust: [stable-x86_64-pc-windows-gnu, beta-x86_64-pc-windows-gnu]
#        allow-fail: [false]
#        include:
#          - rust: nightly-x86_64-pc-windows-gnu
#            allow-fail: true
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.8'
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          override: true
#
#      - name: Run tests
#        run: cargo test --features full --verbose -- --test-threads=1
#
#  test-windows-msvc:
#    runs-on: windows-latest
#    continue-on-error: ${{ matrix.allow-fail }}
#    strategy:
#      matrix:
#        rust: [stable-x86_64-pc-windows-msvc, beta-x86_64-pc-windows-msvc]
#        allow-fail: [false]
#        include:
#          - rust: nightly-x86_64-pc-windows-msvc
#            allow-fail: true
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        id: setup-julia
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.8'
#
#      - uses: ilammy/msvc-dev-cmd@v1
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          override: true
#
#      - name: Run tests
#        run: cargo test --features full --verbose -- --test-threads=1
#
#  test-linux-lts:
#    runs-on: ubuntu-latest
#    continue-on-error: ${{ matrix.allow-fail }}
#    strategy:
#      matrix:
#        rust: [stable]
#        allow-fail: [false]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.6'
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#
#      - name: Run tests
#        run: |
#          export JULIA_DIR="$(dirname $(dirname $(which julia)))"
#          export LD_LIBRARY_PATH="${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}"
#          cargo test --features full,lts --verbose -- --test-threads=1
#
#  test-windows-gnu-lts:
#    runs-on: windows-latest
#    continue-on-error: ${{ matrix.allow-fail }}
#    strategy:
#      matrix:
#        rust: [stable-x86_64-pc-windows-gnu]
#        allow-fail: [false]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.6'
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          override: true
#
#      - name: Run tests
#        run: cargo test --features full,lts --verbose -- --test-threads=1
#
#  test-windows-msvc-lts:
#    runs-on: windows-latest
#    continue-on-error: ${{ matrix.allow-fail }}
#    strategy:
#      matrix:
#        rust: [stable-x86_64-pc-windows-msvc]
#        allow-fail: [false]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        id: setup-julia
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.6'
#
#      - uses: ilammy/msvc-dev-cmd@v1
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          override: true
#
#      - name: Run tests
#        run: cargo test --features full,lts --verbose -- --test-threads=1
#
#  docs:
#    runs-on: ubuntu-latest
#    needs: test-linux
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Setup Julia environment
#        uses: julia-actions/setup-julia@v1
#        with:
#          version: '1.8'
#
#      - name: rust-toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#
#      - name: Set env
#        run: |
#          export JULIA_DIR=$(dirname $(dirname $(which julia)))
#          echo "LD_LIBRARY_PATH=${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
#          echo "JULIA_DIR=${JULIA_DIR}" >> $GITHUB_ENV
#
#      - name: Build Docs
#        run: cargo doc --features docs
#